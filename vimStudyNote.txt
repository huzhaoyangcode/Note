#vim 使用技巧学习笔记
## vim初步
### 运行vim：
			vim 打开一个文件，不存在的行是以～开头的。
			
### vim 模式，切换，显示：
				正常模式：进入vim即进入正常模式，在任何一种模式下，按ESC键即进入正常模式。此模式经常用来移动。
				插入模式：在正常模式下，按i,a,A等键，则进入插入模式，可以输入文本。
				命令模式：在正常模式下，按：键，即可进入命令模式，此模式下用于输入vim或插件的命令，常用有q,wq,q!,w等。
				可视模式：在正常模式下，按v(选中字)，V(选中整行)，ctrl+v（垂直选中）进入可视模式，常用来选中，就像使用鼠标选中一样。
			 设置显示模式：正常情况下，vim是不会显示当前所处于的模式的，:set showmode 之后，就可以在下面显示当前模式了。

### 移动光标：
			普通模式下
			字符移动：
					h:左
					j:下
					k:上
					l:右
			词移动：
					w:向后移动到一个单词的首部
					b:向前移动到一个单词的首部
					e:向后移动到一个单词的尾部
					ge:向前移动到一个单词的尾部
					W:向后移动到一个字符串的首部（字符串就是行里以空白字符分开的）
					B:向前移动到一个字符串的首部
					E:向后移动到一个字符串的尾部
					gE:向前移动到一个字符串的尾部
			移动到行首或行尾：
					0：移动到行首（不可加计数）
					^:移动到一行行首的第一个非空字符（不可加计数）
					$:移动到行尾（加计数表示下一行行尾）
			移动到一个指定字符：
					f<c>:向后查找<c>指定的字符，并停留在该字符上
					F<c>:向前查找<c>指定的字符，并停留在该字符上
					t<c>:向后查找<c>指定的字符，并停留在该字符之前的字符上
					T<c>:向前查找<c>指定的字符，并停留在该字符之前的字符上
			括号匹配：
					%：如果当前光标在本行的括号上，则移动到与之相对应的另一半括号上，如果光标在本行的非括号上，则移动到该行上临近的括号上，如果本行没有括号，则不移动。
			移动到文件首尾部：
					gg:移动到文件首
					G:移动到文件尾
			移动到指定行：
					   <n>G：移动到第n行
			查看当前位置：
					   ctrl+g:显示当前所在行，当前文件名
					   命令模式下：
					   			:set number	显示行号
								:set nonumber 关闭行号
								:set ruler 在底部显示当前行。
			滚屏：
				ctrl+d:向下滚动半屏
				ctrl+u:向上滚动半屏
				ctrl+f:向下滚动一屏少两行
				ctrl+b:向上移动一屏少量行
### 查找：
		普通模式下：
		/word:在本文件中查找所有的word
		?word:在本文件中查找所有的word
		n:/模式下，继续向下匹配下一个; 而？模式下则是向上匹配一个
		N:/模式下，向上匹配；而？模式下则向下匹配
		
		命令模式下：
		:set ignorecase :忽略大小写
		:set noignorecase :不忽略大小写
		
		历史记录：
		/<up/down>:调出搜索的历史记录
		:<up/down>:调出命令的历史记录
		
		查找一个单词：
		*:普通模式下，光标移动单词之上，输入*，即可查找该单词，等价与/\<word\>
		#:普通模式下，光标移动单词之上，输入#，即可查找该单词，等价与?\<word\>
		NOTE:这里查找整个单词时候，如果用输入的方式，则\<表示单词开头，\>表示单词结尾，这是查找整个单词必需的，否则匹配word也会匹配到wordjjj

		设置匹配方式：
		:set hlsearch  :高亮显示匹配
		:set nohlsearch :非高亮显示匹配
		:set incsearch  :设置匹配输入时候就开始定位点。
		:set nowrapscan :设置找到末尾或开头停止查找，默认是找到末尾或开头再循环查找。
		
		查找模式：
		/^word:匹配以word开头的字
		/word$:匹配以word结尾的字
		/A.m:匹配以三个字符，开头为A,中间任意，末尾为m; 这就是.代表匹配任意字符。
		/\？:匹配？,\用来匹配特殊字符时的转义。
		
		使用标记：
		普通模式下：
		'':跳到上一个跳转位置，会在当前和上一个之间来回跳。
		ctrl+o:跳转到较老的跳转位置位置
		ctrl+i:跳转到较新的跳转位置
		NOTE：这所谓的跳转位置就是每次执行一个会将光标移动到本行之外的命令，该移动即被称为一个跳转，这包括/ n的查找跳转，但是行内跳转，和jk移动都不算，即使jk移动也不算跳转
			  ：jumps可以查看跳转的列表。
		
		有名标记：
		m<a~z>:在当前位置设置标记。
		'<a~z>:跳到指定标记处。
		：marks：列出所有的标记列表。
		']:跳到最后一次修改的地方。前提是修改的没有被保存。
		'[:跳到最后一次修改的地方。前提是修改的没有被保存。
### 删除：
		 普通模式下：
		 x:删除当前光标的字符。
		 X:删除当前光标左边的字符。
		 dd:会删除当前光标所在行，并把其下一行移动到当前删除后的空行。
		 J:删除当前行的换行符
### 修改：
		vim 操作可由操作符和动作组成，如下，d为操作符，而w或e则是动作，连起来就形成了如下操作。
		dw:从当前位置删除到下一个单词的词首，但不删除词首字母。
		de:从当前位置删除到当前单词的词尾，包括词尾字母。
		ce:从当前位置删除到当前单词的词尾，然后切换成插入模式。
		cw:从当前位置删除到当前单词的词尾，然后切换成插入模式，跟ce一样，之所以不删除中间的空格，和以前的vi历史有关系。
		dd:删除当前行。
		cc:清空当前行，然后切换成插入模式。
		d$:从当前光标位置删除到行尾。
		c$:从当前光标位置删除到行尾，并进入插入模式。
		x:dl的快捷键，删除当前光标的字符。
		X:dh的快捷键，删除当前光标左边的字符。
		D:d$的快捷键,从当前位置删除到行尾。
		C:c$的快捷键,从当前位置删除到行尾，并切换到插入状态。
		s:cl的快捷键,删除当前光标的字符，并切换到插入状态。
		S:cc的快捷键,清空当前行，然后切换成插入模式
		r:用你输入的字符替换当前光标所在的字符。
		.:重复最后一次的修改，切记是修改，重复任何u(撤销)，和(重做)ctrl+r和冒号命令外的修改。

### 移动文本
	yy:复制当前行。
	y:复制。
	p:当复制的是一行时，则粘贴到下一行，当复制的是一行的一部分时，则粘贴到光标的后面。
	P(大写):当复制的是一行时，则粘贴到上一行，当复制的是一行的一部分时，则粘贴到光标的前面。
	xp:可以用来交换字符。
	
### 文本对象
	表示一个类型的文本，不清楚的时候可以在可视模式下进行选择。
	aw:一个单词，包含其后面的空格。
	a":一段用""，包含的内容，包括""
	a':一段用'',包含的内容，包括''
	a[:[]包含的内容，包含[]
	a]:[]包含的内容，包含[]
	a{:{}包含的内容，包含{}
	a}:{}包含的内容，包含{}
	
	iw:一个单词，不包含其后面的空格。
	i":一段用""，不包含的内容，包括""
	i':一段用'',不包含的内容，包括''
	i[:[]包含的内容，不包含[]
	i]:[]包含的内容，不包含[]
	i{:{}包含的内容，不包含{}
	i}:{}包含的内容，不包含{}

	
	
### 可视模式
		v:启动可视模式，现在移动光标就会选择上移动过的内容，又成为字选择。
		ctrl+v: 块选择，垂直的选择。
		V:一次性选择一行，无论光标当前在何处都会选择一行。
		o:在可视模式下，可以用来移动到光标到另一端。块选择情况下则会移动到对角。
		O:可视模式的块选择情况下，可以移动到同一行的另一端。
		
### 替换模式
		r:用接下来输入的字符替换光标所在位置的字符。
		R:进入替换模式，把当前输入的字符开始逐个替换接下来的字符，直到按ESC退出。
### 撤销与重做：
			普通模式下：
				 u:撤销上一次的操作
			ctrl+R:撤销上一次的撤销操作,即重做。
				 U:撤销在这一行上的操作,前提是操作过该行，没有操作过其他行。再输入U,则撤销上一个U操作
### 退出：
		普通模式下：
		ZZ：保存并退出
		ctrl+z:不保存，暂时退出到shell命令行，命令行输入fg回来。
		
		命令模式下：
		：q! 放弃修改并退出
		：e! 放弃修改并重新编辑，不退出。
		
### .vimrc文件
	说明：该文件用于配置vim。一般位置在~/.vimrc
	常用设置：
			
	
	
### 其他：
		普通模式下：
		i:在光标前面进行插入
		I:移动到当前行的第一个非空字符并启动插入模式。
		a：在光标后面进行插入
		A:在当前行的行尾插入
		o:在光标所在行的下方生成一个空行，并进入插入模式
		O:在光标所在行的上方生成一个空行，并进入插入模式
		~:把当前选中的内容从大写字母变成小写字母。
		;:重复上一次的命令
		ESC：终止当前输入一半的命令，和回到普通模式
		指定计数：在命令前面加数字，表示执行后面的命令n次，例如:5j:向下移动5行;  1024it:输入1024个t;
		
		命令模式下：
		获得帮助文档：：help即可获得帮助文档，ZZ退出。
		

		
		
		
		
		
		
		
